{"version":3,"sources":["Components/nav/nav.jsx","Components/header/header.jsx","Components/Error/Error.jsx","Components/Article/Article.jsx","App.js","index.js"],"names":["Nav","props","className","Form","onSubmit","onSearch","Group","Input","placeholder","name","onChange","e","isValue","value","Select","onChangeSelect","options","key","text","isLoading","Button","type","Loader","inline","active","size","label","range","min","max","onChangeRange","step","onClick","luckyQuery","Header","href","src","alt","Error","Article","useState","createTime","setCreateTime","useEffect","prev","time","timeCreation","Date","getTime","timeDifference","days","Math","floor","years","hours","minutes","timeCalculation","id","title","link","points","author","getComments","itemID","getID","num_comments","App","searchValue","setSearchValue","setHackerContent","articles","setArticles","comments","setComments","setIsLoading","isError","setIsError","activePage","setActivePage","articlesPerPage","setArticlesPerPage","isDisabledPagination","setIsDisabledPagination","numOfResults","setNumOfResults","ceil","totalOfPagination","setTotalOfPagination","isComments","setIsComments","isCommentsLoading","setIsCommentsLoading","articleTitle","setArticleTitle","luckyArray","luckyNumber","random","length","undefined","url","URL","parameters","query","hitsPerPage","search","URLSearchParams","fetch","then","response","ok","status","json","error","console","log","data","hits","catch","indexOfLastArticle","indexOfFirstArticle","currentArticle","slice","children","TextOfComment","html","ReactHtmlParser","Comment","hasChildren","map","item","getArticleTitle","_","target","content","i","objectID","story_title","created_at","Pagination","onPageChange","totalPages","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0aAoDeA,EAhDH,SAACC,GAeX,OACE,sBAAKC,UAAU,MAAf,UAGE,cAACC,EAAA,EAAD,CAAMD,UAAU,YAAYE,SAAU,kBAAMH,EAAMI,YAAlD,SACE,eAACF,EAAA,EAAKG,MAAN,CAAYJ,UAAU,aAAtB,UACE,cAACC,EAAA,EAAKI,MAAN,CACEL,UAAU,cACVM,YAAY,YACZC,KAAK,SACLC,SAAU,SAACC,GAAD,OAAOV,EAAMW,QAAQD,IAC/BE,MAAOZ,EAAMY,QAEf,cAACC,EAAA,EAAD,CAAQZ,UAAU,cAAcQ,SAAUT,EAAMc,eAAgBP,YAAY,iBAAiBQ,QApBjF,CAClB,CAAEC,IAAK,IAAKC,KAAM,KAAML,MAAO,MAC/B,CAAEI,IAAK,IAAKC,KAAM,KAAML,MAAO,MAC/B,CAAEI,IAAK,IAAKC,KAAM,MAAOL,MAAO,OAChC,CAAEI,IAAK,IAAKC,KAAM,MAAOL,MAAO,OAChC,CAAEI,IAAK,IAAKC,KAAM,MAAOL,MAAO,UAgBzBZ,EAAMkB,UAAY,cAACC,EAAA,EAAD,CAAQC,KAAK,SAASnB,UAAU,WAAhC,SAA4C,cAACoB,EAAA,EAAD,CAAQC,OAAO,WAAWC,QAAM,EAACC,KAAK,WAA4B,cAACL,EAAA,EAAD,CAAQC,KAAK,SAASnB,UAAU,WAAhC,oBACjI,cAACC,EAAA,EAAKI,MAAN,CACEL,UAAU,aACVwB,MAAK,6BAAwBzB,EAAM0B,OACnCC,IAAK,EACLC,IAAK,GACLpB,KAAK,QACLC,SAAU,SAACC,GAAD,OAAOV,EAAM6B,cAAcnB,IACrCoB,KAAM,EACNV,KAAK,QACLR,MAAOZ,EAAM0B,aAInB,cAACP,EAAA,EAAD,CAAQY,QAAS/B,EAAMgC,WAAY/B,UAAU,WAA7C,8BC3BSgC,EAhBO,SAACjC,GACrB,OACE,iCACE,qBAAKC,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,oBAAGiC,KAAK,eAAejC,UAAU,oBAAjC,UACE,qBAAKkC,IAAI,oBAAoBC,IAAI,SADnC,iBAIA,cAAC,EAAD,CAAKJ,WAAYhC,EAAMgC,WAAYlB,eAAgBd,EAAMc,eAAgBY,MAAO1B,EAAM0B,MAAOG,cAAe7B,EAAM6B,cAAeX,UAAWlB,EAAMkB,UAAWP,QAASX,EAAMW,QAASP,SAAUJ,EAAMI,SAAUQ,MAAOZ,EAAMY,gB,wBCDvNyB,G,OATD,WACZ,OACE,sBAAKpC,UAAU,QAAf,UACE,oBAAIA,UAAU,eAAd,yCACA,qBAAKA,UAAU,aAAakC,IAAI,kBAAkBC,IAAI,qB,kBCsD7CE,G,OAxDC,SAACtC,GACf,MAAoCuC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAoCA,OALAC,qBAAU,WACRD,GAAc,SAAAE,GAAI,OA7BI,SAACC,GAEvB,IAAMC,EAAe,IAAIC,KAAKF,GAAMG,UAE9BC,IADc,IAAIF,MAAOC,UACOF,GAAgB,IAChDI,EAAOC,KAAKC,MAAMH,EAAiB,OACnCI,EAAQF,KAAKC,MAAMF,EAAO,QAG1BI,EAAQH,KAAKC,MAAMH,EAAiB,MAAQ,GAI5CM,EAAUJ,KAAKC,MAAMH,EAAiB,IAAM,GAElD,OAAII,GAAS,GAAKA,EAAQ,EAClB,aACGA,GAAS,EACZ,GAAN,OAAUA,EAAV,cACSA,EAAQ,GAAKC,GAAS,GACzB,GAAN,OAAUJ,EAAV,aACSI,EAAQ,IAAMA,GAAS,EAC1B,GAAN,OAAUA,EAAV,cACSA,EAAQ,EACX,GAAN,OAAUC,EAAV,qBADK,EAMsBC,CAAgBvD,EAAM4C,WAClD,IAID,qBAAI3C,UAAU,UAAd,UACE,uBAAMA,UAAU,cAAhB,UAA+BD,EAAMwD,GAArC,OACA,sBAAKvD,UAAU,qBAAf,UACE,oBAAIA,UAAU,iBAAd,SAAgCD,EAAMyD,QACtC,mBAAGvB,KAAMlC,EAAM0D,KAAMzD,UAAU,gBAA/B,qBAEF,sBAAKA,UAAU,qBAAf,UACE,uBAAMA,UAAU,gBAAhB,UAAiCD,EAAM2D,OAAvC,cAA0D3D,EAAM4D,OAAhE,IAAyEpB,KACzE,yBAAQT,QAAS,WACf/B,EAAM6D,YAAY7D,EAAM8D,QACxB9D,EAAM+D,MAAM/D,EAAMyD,QACjBxD,UAAU,oBAHb,UAGkCD,EAAMgE,aAHxC,uBC0MOC,MA9Of,WACE,MAAsC1B,mBAAS,IAA/C,mBAAO2B,EAAP,KAAoBC,EAApB,KACA,EAA0C5B,qBAA1C,mBAAsB6B,GAAtB,WACA,EAAgC7B,mBAAS,IAAzC,mBAAO8B,EAAP,KAAiBC,EAAjB,KACA,EAAgC/B,mBAAS,IAAzC,mBAAOgC,EAAP,KAAiBC,EAAjB,KACA,EAAkCjC,oBAAS,GAA3C,mBAAOrB,EAAP,KAAkBuD,EAAlB,KACA,EAA8BlC,oBAAS,GAAvC,mBAAOmC,EAAP,KAAgBC,EAAhB,KACA,EAAoCpC,mBAAS,GAA7C,mBAAOqC,EAAP,KAAmBC,EAAnB,KACA,EAA8CtC,mBAAS,GAAvD,mBAAOuC,EAAP,KAAwBC,EAAxB,KACA,EAAwDxC,mBAAS,YAAjE,mBAAOyC,EAAP,KAA6BC,EAA7B,KACA,EAAwC1C,mBAAS,CAAE3B,MAAO,KAA1D,mBAAOsE,EAAP,KAAqBC,EAArB,KACA,EAAkD5C,mBAASW,KAAKkC,KAAKF,EAAatE,MAAQkE,IAA1F,mBAAOO,EAAP,KAA0BC,EAA1B,KACA,EAAoC/C,oBAAS,GAA7C,mBAAOgD,GAAP,KAAmBC,GAAnB,KACA,GAAkDjD,oBAAS,GAA3D,qBAAOkD,GAAP,MAA0BC,GAA1B,MACA,GAAwCnD,qBAAxC,qBAAOoD,GAAP,MAAqBC,GAArB,MAEAlD,qBAAU,WACR4C,EAAqBpC,KAAKkC,KAAKF,EAAatE,MAAQkE,MACnD,CAACI,EAAcJ,IAElB,IAAMe,GAAa,CAAC,MAAO,OAAQ,aAAc,OAAQ,QAAS,UAAW,UAAW,SAAU,MAAO,QAAS,eAAgB,iBAAkB,WAAY,UAAW,SAAU,QAAS,UAAW,YAEnM7D,GAAa,WACjB,IAAM8D,EAAc5C,KAAKC,MAAMD,KAAK6C,SAAWF,GAAWG,QAE1D5F,GADyByF,GAAWC,KAGtCpD,qBAAU,WACRV,OAEC,IAEH,IAUM5B,GAAW,SAACQ,QACFqF,IAAVrF,IACFA,EAAQsD,GAEVsB,IAAc,GACdf,GAAa,GACbE,GAAW,GACXL,GAAY,SAAA3B,GAAI,MAAW,MAC3B,IAAMuD,EAAM,IAAIC,IAAI,yCAEdC,EAAa,CACjBC,MAAOzF,EACP0F,YAAapB,EAAatE,OAE5BsF,EAAIK,OAAS,IAAIC,gBAAgBJ,GAIjCK,MAAMP,GACHQ,MAAK,SAACC,GACL,IAAKA,EAASC,GAEZ,MAAM,IAAIvE,EAAJ,qEAC0DsE,EAASE,SAE3E,OAAOF,EAASG,UAEhB,SAACC,GACCC,QAAQC,IAAI,4BACZxC,GAAa,GACbE,GAAW,GACXqC,QAAQC,IAAIF,MAGfL,MAAK,SAACQ,GACLzC,GAAa,GACTyC,EAAKC,KAAKnB,OAAS,GACrB5B,EAAiB8C,GACjB5C,EAAY4C,EAAKC,MACjBlC,EAAwB,MAExBA,EAAwB,YACxBN,GAAW,OAGdyC,OAAM,SAACL,GACNC,QAAQC,IAAI,eACZxC,GAAa,GACbE,GAAW,GACXqC,QAAQC,IAAIF,OAYZM,GAAqBzC,EAAaE,EAClCwC,GAAsBD,GAAqBvC,EAC3CyC,GAAiBlD,EAASmD,MAAMF,GAAqBD,IAOrDxD,GAAc,SAACL,GACnB,IAAM0C,EAAG,8CAA0C1C,GACnDkC,IAAqB,GACrBe,MAAMP,GACHQ,MAAK,SAACC,GACL,IAAKA,EAASC,GAEZ,MAAM,IAAIvE,EAAJ,qEAC0DsE,EAASE,SAE3E,OAAOF,EAASG,UAEhB,SAACC,GACCC,QAAQC,IAAI,4BACZxC,GAAa,GACbE,GAAW,GACXe,IAAqB,GACrBsB,QAAQC,IAAIF,MAGfL,MAAK,SAACQ,GACLzC,GAAa,GACTyC,GACF1C,EAAY0C,EAAKO,UACjBjC,IAAc,GACdE,IAAqB,IAIrBsB,QAAQC,IAAI,2BAGfG,OAAM,SAACL,GACNC,QAAQC,IAAI,eACZxC,GAAa,GACbiB,IAAqB,GACrBf,GAAW,GACXqC,QAAQC,IAAIF,OAGZW,GAAgB,SAAC1H,GACrB,IAAM2H,EAAO3H,EAAMiB,KAEnB,OAEE2G,GADA,CACgBD,IAGdE,GAAU,SAAVA,EAAW,GAA4B,IAA1B5G,EAAyB,EAAzBA,KAAMwG,EAAmB,EAAnBA,SACjBK,GADoC,EAATtE,GACbiE,GAAaA,EAASzB,OAAS,GACnD,OACE,qBAAI/F,UAAU,gBAAd,UACE,4BACE,cAACyH,GAAD,CAAezG,KAAMA,MAEtB6G,GAAeL,EAASM,KAAI,SAACC,GAAD,OAC3B,oBAAI/H,UAAU,sBAAd,SACE,cAAC4H,EAAD,eAA2BG,GAAbA,EAAKxE,aAOvByE,GAAkB,SAACrH,GACvBgF,GAAgBhF,IAIlB,OACE,qCACE,cAAC,EAAD,CAAQoB,WAAYA,GAAYlB,eApJb,SAACoH,EAAD,GAAmB,IAAbtH,EAAY,EAAZA,MAE3BuE,EAAgB,CAAEvE,WAkJgDc,MAAOoD,EAAiBjD,cAvJtE,SAACnB,GACrBqE,EAAmBrE,EAAEyH,OAAOvH,QAsJ4FM,UAAWA,EAAWP,QAhJzH,SAACD,GACtByD,GAAe,SAAAxB,GAAI,OAAWjC,EAAEyH,OAAOvH,UA+IgIR,SAAUA,GAAUQ,MAAOsD,IAChM,+BACE,sBAAKjE,UAAU,YAAf,UAMGyE,GAAW,cAAC,EAAD,IACZ,oBAAIzE,UAAU,eAAd,SAKIsH,IAAkBA,GAAeQ,KAAI,SAACK,EAASC,GAC7C,OACE,cAAC,EAAD,CACEnH,UAAWA,EAEX4C,OAAQsE,EAAQE,SAChB9E,IAAKoB,EAAa,GAAKE,EAAkBuD,EAAI,EAC7C5E,MAAO2E,EAAQ3E,OAAS2E,EAAQG,YAChC7E,KAAM0E,EAAQlC,IACdtC,OAAQwE,EAAQxE,OAChBD,OAAQyE,EAAQzE,OAChBK,aAAcoE,EAAQpE,aACtBpB,KAAMwF,EAAQI,WACd3E,YAAaA,GACbE,MAAOkE,GACPxC,kBAAmBA,GACnBF,WAAYA,IAZP6C,EAAQE,gBAoBrB5D,GAAWW,EAAoB,GAAK,cAACoD,EAAA,EAAD,CAAYxI,UAAW+E,EAAsBJ,WAAYA,EAAY8D,aA1HpF,SAACR,EAAD,GAAwB,IAAlBtD,EAAiB,EAAjBA,WACnCC,EAAcD,IAyHyI+D,WAAYtD,IAC5JE,IACC,sBAAKtF,UAAU,UAAUuD,GAAG,oBAA5B,UACE,qBAAIvD,UAAU,iBAAd,mCAAqD,mCAAM0F,GAAN,UACrD,oBAAI1F,UAAU,uBAAd,SACGsE,GAAYA,EAASwD,KAAI,SAAAC,GAAI,OAAI,cAACH,GAAD,eAA4BG,GAAdA,EAAKxE,qBC3OrEoF,IAASC,OAAO,cAAE,IAAMC,WAAR,UACd,cAAC,EAAD,MAEAC,SAASC,eAAe,U","file":"static/js/main.27207a38.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './nav.css'\nimport { Form, Loader, Button, Select } from 'semantic-ui-react'\n\nconst Nav = (props) => {\n  // const [searchValue, setSearchValue] = useState(\"\")\n  // const getValue = (e) => {\n  //   setSearchValue(prev => prev = e.target.value)\n  // }\n  // const onSubmitSearch = (searchValue) => {\n\n  // }\n  const hitsPerPage = [\n    { key: '1', text: '40', value: '40' },\n    { key: '2', text: '60', value: '60' },\n    { key: '3', text: '100', value: '100' },\n    { key: '4', text: '150', value: '150' },\n    { key: '5', text: '200', value: '200' }\n  ]\n  return (\n    <nav className=\"nav\">\n      {/* <a className=\"nav__link link\" href=\"#\">new</a>\n      <a className=\"nav__link link\" href=\"#\">comments</a> */}\n      <Form className=\"nav__form\" onSubmit={() => props.onSearch()}>\n        <Form.Group className=\"nav__group\">\n          <Form.Input\n            className=\"nav__search\"\n            placeholder='Search...'\n            name='search'\n            onChange={(e) => props.isValue(e)}\n            value={props.value}\n          />\n          <Select className=\"nav__select\" onChange={props.onChangeSelect} placeholder='Num of results' options={hitsPerPage} />\n          {props.isLoading ? <Button type=\"submit\" className=\"nav__btn\" ><Loader inline='centered' active size='mini'></Loader></Button> : <Button type=\"submit\" className=\"nav__btn\" >Search</Button>}\n          <Form.Input\n            className=\"nav__range\"\n            label={`Articles per page: ${props.range}`}\n            min={1}\n            max={20}\n            name='range'\n            onChange={(e) => props.onChangeRange(e)}\n            step={1}\n            type='range'\n            value={props.range}\n          />\n        </Form.Group>\n      </Form>\n      <Button onClick={props.luckyQuery} className=\"nav__btn\">Surprise me!</Button>\n    </nav>\n  )\n}\n\nexport default Nav;","import React from 'react';\nimport './header.css';\nimport Nav from '../nav/nav'\n\nexport const Header = (props) => {\n  return (\n    <header>\n      <div className=\"container\">\n        <div className=\"row\">\n          <a href=\"./index.html\" className=\"header__logo link\">\n            <img src=\"./img/hn-logo.svg\" alt=\"Logo\" />\n            Hacker News\n          </a>\n          <Nav luckyQuery={props.luckyQuery} onChangeSelect={props.onChangeSelect} range={props.range} onChangeRange={props.onChangeRange} isLoading={props.isLoading} isValue={props.isValue} onSearch={props.onSearch} value={props.value} />\n        </div>\n      </div>\n    </header>\n  )\n}\n\nexport default Header;","import React, { useEffect, useState } from \"react\";\nimport './error.css'\n\nconst Error = () => {\n  return (\n    <div className=\"error\">\n      <h2 className=\"error__title\">Search failed successfully!</h2>\n      <img className=\"error__gif\" src=\"./img/error.gif\" alt=\"Homer Error\" />\n    </div>\n  )\n}\n\nexport default Error;","import React, { useEffect, useState } from \"react\";\nimport './article.css'\nimport { Loader, Dimmer } from 'semantic-ui-react'\n\n\nconst Article = (props) => {\n  const [createTime, setCreateTime] = useState(\"\")\n\n  // calculate days\n  const timeCalculation = (time) => {\n    // const timeCreation = new Date(`${props.time}`).getTime();\n    const timeCreation = new Date(time).getTime()\n    const timeCurrent = new Date().getTime()\n    const timeDifference = (timeCurrent - timeCreation) / 1000\n    const days = Math.floor(timeDifference / 86400);\n    const years = Math.floor(days / 365.25)\n\n    // calculate hours\n    const hours = Math.floor(timeDifference / 3600) % 24;\n\n\n    // calculate minutes\n    const minutes = Math.floor(timeDifference / 60) % 60;\n\n    if (years >= 1 && years < 2) {\n      return `1 year ago`\n    } else if (years >= 2) {\n      return `${years} years ago`\n    } else if (years < 1 && hours >= 24) {\n      return `${days} days ago`\n    } else if (hours < 24 && hours >= 1) {\n      return `${hours} hours ago`\n    } else if (hours < 1) {\n      return `${minutes} minutes ago`\n    }\n  }\n\n  useEffect(() => {\n    setCreateTime(prev => prev = timeCalculation(props.time))\n  }, [])\n  // timeCalculation(createTime)\n\n  return (\n    <li className=\"article\">\n      <span className=\"article__id\">{props.id}.</span>\n      <div className=\"row article__row-1\">\n        <h3 className=\"article__title\">{props.title}</h3>\n        <a href={props.link} className=\"article__link\">link</a>\n      </div>\n      <div className=\"row article__row-2\">\n        <span className=\"article__info\">{props.points} points by {props.author} {createTime}</span>\n        <button onClick={() => {\n          props.getComments(props.itemID);\n          props.getID(props.title)\n        }} className=\"article__comments\">{props.num_comments} comments</button>\n\n      </div>\n    </li>\n  )\n}\n\nexport default Article;","import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport 'normalize.css';\nimport 'semantic-ui-css/semantic.min.css'\nimport './App.css';\nimport Header from './Components/header/header'\nimport Spinner from './Components/Spinner/Spinner'\nimport { Loader, Dimmer, Pagination, Button } from 'semantic-ui-react'\nimport Error from './Components/Error/Error';\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\n\n\nimport Article from './Components/Article/Article'\n\n\nfunction App() {\n  const [searchValue, setSearchValue] = useState(\"\")\n  const [hackerContent, setHackerContent] = useState();\n  const [articles, setArticles] = useState([]);\n  const [comments, setComments] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [activePage, setActivePage] = useState(1);\n  const [articlesPerPage, setArticlesPerPage] = useState(5);\n  const [isDisabledPagination, setIsDisabledPagination] = useState(\"disabled\")\n  const [numOfResults, setNumOfResults] = useState({ value: 20 })\n  const [totalOfPagination, setTotalOfPagination] = useState(Math.ceil(numOfResults.value / articlesPerPage))\n  const [isComments, setIsComments] = useState(false)\n  const [isCommentsLoading, setIsCommentsLoading] = useState(false)\n  const [articleTitle, setArticleTitle] = useState()\n\n  useEffect(() => {\n    setTotalOfPagination(Math.ceil(numOfResults.value / articlesPerPage))\n  }, [numOfResults, articlesPerPage])\n\n  const luckyArray = ['php', 'jest', 'javascript', 'perl', 'react', 'angular', 'hacking', 'python', 'vue', 'jango', 'html and css', 'politics in it', 'frontend', 'backend', 'server', 'macos', 'windows', 'bootcamp']\n\n  const luckyQuery = () => {\n    const luckyNumber = Math.floor(Math.random() * luckyArray.length)\n    const searchLuckyValue = luckyArray[luckyNumber]\n    onSearch(searchLuckyValue)\n  }\n  useEffect(() => {\n    luckyQuery()\n    // console.log('hired')\n  }, [])\n\n  const onChangeRange = (e) => {\n    setArticlesPerPage(e.target.value)\n  }\n  const onChangeSelect = (_, { value }) => {\n    // console.log({ value })\n    setNumOfResults({ value })\n  }\n  const getSearchValue = (e) => {\n    setSearchValue(prev => prev = e.target.value)\n  }\n  const onSearch = (value) => {\n    if (value === undefined) {\n      value = searchValue;\n    }\n    setIsComments(false)\n    setIsLoading(true);\n    setIsError(false)\n    setArticles(prev => prev = [])\n    const url = new URL(\"https://hn.algolia.com/api/v1/search?\");\n\n    const parameters = {\n      query: value,\n      hitsPerPage: numOfResults.value\n    };\n    url.search = new URLSearchParams(parameters);\n\n    // console.log(`URL: ${url}`);\n\n    fetch(url)\n      .then((response) => {\n        if (!response.ok)\n          // Failed HTTP status\n          throw new Error(\n            `An error has occured during the request. HTTP status code: ${response.status}`\n          );\n        return response.json();\n      },\n        (error) => {\n          console.log(\"Rejection error callback\");\n          setIsLoading(false);\n          setIsError(true);\n          console.log(error);\n        }\n      )\n      .then((data) => {\n        setIsLoading(false);\n        if (data.hits.length > 0) {\n          setHackerContent(data);\n          setArticles(data.hits)\n          setIsDisabledPagination(\"\")\n        } else {\n          setIsDisabledPagination(\"disabled\")\n          setIsError(true)\n        }\n      })\n      .catch((error) => {\n        console.log(\"Catch block\");\n        setIsLoading(false);\n        setIsError(true);\n        console.log(error);\n      });\n\n\n  }\n\n\n\n  const handlePaginationChange = (_, { activePage }) => {\n    setActivePage(activePage)\n  }\n\n  const indexOfLastArticle = activePage * articlesPerPage;\n  const indexOfFirstArticle = indexOfLastArticle - articlesPerPage;\n  const currentArticle = articles.slice(indexOfFirstArticle, indexOfLastArticle)\n  const totalPages = 20;\n  // if (isLoading) {\n  //   return <MoonLoader color=\"black\" loading={isLoading} size={50} />;\n  // }\n\n\n  const getComments = (id) => {\n    const url = `https://hn.algolia.com/api/v1/items/${id}`;\n    setIsCommentsLoading(true)\n    fetch(url)\n      .then((response) => {\n        if (!response.ok)\n          // Failed HTTP status\n          throw new Error(\n            `An error has occured during the request. HTTP status code: ${response.status}`\n          );\n        return response.json();\n      },\n        (error) => {\n          console.log(\"Rejection error callback\");\n          setIsLoading(false);\n          setIsError(true);\n          setIsCommentsLoading(false)\n          console.log(error);\n        }\n      )\n      .then((data) => {\n        setIsLoading(false);\n        if (data) {\n          setComments(data.children);\n          setIsComments(true)\n          setIsCommentsLoading(false)\n          // console.log(comments)\n          // createComments(comments)\n        } else {\n          console.log('No comments detected')\n        }\n      })\n      .catch((error) => {\n        console.log(\"Catch block\");\n        setIsLoading(false);\n        setIsCommentsLoading(false)\n        setIsError(true);\n        console.log(error);\n      });\n  }\n  const TextOfComment = (props) => {\n    const html = props.text;\n\n    return (\n      // <div ></div>\n      ReactHtmlParser(html)\n    )\n  }\n  const Comment = ({ text, children, id }) => {\n    const hasChildren = children && (children.length > 0)\n    return (\n      <li className=\"comment__item\">\n        <p>\n          <TextOfComment text={text} />\n        </p>\n        {hasChildren && children.map((item) => (\n          <ul className=\"comment__list-child\">\n            <Comment key={item.id} {...item} />\n          </ul>\n        ))}\n      </li>\n    )\n  }\n\n  const getArticleTitle = (value) => {\n    setArticleTitle(value)\n  }\n\n\n  return (\n    <>\n      <Header luckyQuery={luckyQuery} onChangeSelect={onChangeSelect} range={articlesPerPage} onChangeRange={onChangeRange} isLoading={isLoading} isValue={getSearchValue} onSearch={onSearch} value={searchValue} />\n      <main>\n        <div className=\"container\">\n          {/* {\n            isLoading && <Dimmer active={isLoading}>\n              <Loader inline='centered' active size='medium'>Loading</Loader>\n            </Dimmer>\n          } */}\n          {isError && <Error />}\n          <ol className=\"article-list\">\n            {\n\n              /* if (isLoading) .. present loading-status  // TODO */\n\n              currentArticle && currentArticle.map((content, i) => {\n                return (\n                  <Article\n                    isLoading={isLoading}\n                    key={content.objectID}\n                    itemID={content.objectID}\n                    id={(activePage - 1) * articlesPerPage + i + 1}\n                    title={content.title || content.story_title}\n                    link={content.url}\n                    author={content.author}\n                    points={content.points}\n                    num_comments={content.num_comments}\n                    time={content.created_at}\n                    getComments={getComments}\n                    getID={getArticleTitle}\n                    isCommentsLoading={isCommentsLoading}\n                    isComments={isComments}\n                  >\n                  </Article>\n                )\n              })\n            }\n\n          </ol>\n          {!isError && totalOfPagination > 1 && <Pagination className={isDisabledPagination} activePage={activePage} onPageChange={handlePaginationChange} totalPages={totalOfPagination} />}\n          {isComments &&\n            <div className=\"comment\" id=\"commentsContainer\">\n              <h2 className=\"comment__title\">Comments for Article: <em>\"{articleTitle}\"</em></h2>\n              <ul className=\"comment__list-parent\">\n                {comments && comments.map(item => <Comment key={item.id}  {...item} />)}\n\n              </ul>\n\n            </div>}\n        </div>\n      </main>\n\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(< React.StrictMode >\n  <App />\n</React.StrictMode>,\n  document.getElementById('app')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();"],"sourceRoot":""}